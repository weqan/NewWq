@model NewWq.WebUI.Areas.Admin.Models.CommodityViewModels.EditCommodityViewModel
@using NewWq.Dto
@{
}
@section header{

    <link href="~/Areas/Admin/umeditor/css/umeditor.css" rel="stylesheet" />
}

<h2>商品编辑</h2>


@using (Html.BeginForm("CommodityEdit", "Commodity", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>编辑商品信息</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="hidden">
                @Html.EditorFor(model => model.CommodityId, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">


                <!--style给定宽度可以影响编辑器的最终宽度-->
                <script type="text/plain" id="myEditor" style="width:100%;height:240px;">
                </script>


                @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control", type = "hidden" } })

            </div>

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MainImage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" id="uploadImg" name="uploadImg">
                <p class="help-block">上传图片不要超过2M</p>
                @Html.EditorFor(model => model.MainImage, new { htmlAttributes = new { @class = "form-control", type = "hidden" } })
                <img src="/@Model.MainImage" alt="Alternate Text" />
            </div>


        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TaobaoUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TaobaoUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TaobaoUrl, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.CategoryIds, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    foreach (var Category in ViewBag.Categories)
                    {
                        <label class="checkbox-inline">
                            <input type="checkbox" name="CategoryIds" id="@Category.CategoryId" value="@Category.CategoryId" @(Model.CategoryIds.Contains(((CategoryDto)Category).CategoryId) ? "checked" : "")>
                            @Category.CategoryName
                        </label>
                    }
                }

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="保存" class="btn btn-primary btn-lg" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("返回列表", "CommodityList")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Areas/Admin/umeditor/editor_api2.js"></script>
    <script src="~/Areas/Admin/umeditor/js/umeditor.config.js"></script>
    <script src="~/Areas/Admin/umeditor/zh-cn/zh-cn.js"></script>
    <script>

        //实例化编辑器
        var um = UM.getEditor('myEditor', {
            imageUrl: '/Admin/Commodity/UploadImg',
            imagePath: '',
        });

        um.addListener('blur', function () {
            document.getElementById("Content").value = um.getContent();
        });

        window.onload = function () {
            um.setContent(document.getElementById("Content").value);
        }

    </script>
}
